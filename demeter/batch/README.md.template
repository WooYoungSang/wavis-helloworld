# {{PROJECT_NAME}} - UoW Batch Execution System

이 디렉토리는 {{PROJECT_NAME}} 프로젝트의 모든 UoW(Unit of Work)를 Claude Code Headless 모드로 순차적으로 자동 실행하는 시스템을 포함합니다.

## 구조

```
batch/
├── configs/
│   └── uow-execution-order.yaml    # UoW 실행 순서 및 의존성 구성
├── scripts/
│   ├── batch-execute-uows.sh       # 전체 배치 실행 마스터 스크립트
│   └── execute-uow.sh              # 개별 UoW 실행 스크립트
├── prompts/
│   ├── UoW-XXX.md                  # 각 UoW별 Claude 프롬프트 파일
│   └── ...                         # 모든 UoW에 대한 프롬프트
├── logs/                           # 실행 로그 저장
├── reports/                        # 실행 보고서 저장
└── README.md                       # 이 파일
```

## 실행 순서

UoW들은 SSOT(Single Source of Truth)에서 정의된 의존성에 따라 단계별로 실행됩니다:

### 자동 단계 구성
- **Phase 1**: Foundation 레이어 - 프로젝트 기반 구조 설정
- **Phase 2**: Infrastructure 레이어 - 인프라 서비스 구성
- **Phase 3**: Application 레이어 - 비즈니스 로직 구현
- **Phase 4**: Deployment 레이어 - 배포 환경 구성

각 단계는 의존성 분석을 통해 자동으로 결정되며, `configs/uow-execution-order.yaml`에서 확인할 수 있습니다.

## 사용법

### 환경 설정

```bash
# 선택적 환경 변수
export CLAUDE_MODEL="claude-3-5-sonnet-20241022"  # 기본값
export PROJECT_NAME="{{PROJECT_NAME}}"             # 기본값
```

### 전체 배치 실행

```bash
# 모든 UoW 순차 실행
./scripts/batch-execute-uows.sh

# 드라이런 (실행 계획만 확인)
./scripts/batch-execute-uows.sh --dry-run

# 상세 로그와 함께 실행
./scripts/batch-execute-uows.sh --verbose

# 실패해도 계속 진행
./scripts/batch-execute-uows.sh --continue-on-failure

# 특정 단계만 실행
./scripts/batch-execute-uows.sh --phase=2

# 특정 UoW부터 시작
./scripts/batch-execute-uows.sh --start-from=UoW-101

# 특정 UoW에서 중단
./scripts/batch-execute-uows.sh --stop-at=UoW-170
```

### 개별 UoW 실행

```bash
# 개별 UoW 실행
./scripts/execute-uow.sh UoW-001

# 드라이런으로 개별 UoW 확인
./scripts/execute-uow.sh UoW-101 --dry-run

# 테스트 스킵하고 실행
./scripts/execute-uow.sh UoW-140 --skip-tests

# 타임아웃 설정 (7200초 = 2시간)
./scripts/execute-uow.sh UoW-210 --timeout=7200
```

## 병렬 실행

호환 가능한 UoW들은 자동으로 병렬 실행됩니다. 병렬 실행 그룹은 다음 기준으로 식별됩니다:

- 같은 실행 단계 내에서 서로 의존하지 않는 UoW들
- 같은 아키텍처 레이어의 독립적인 컴포넌트들
- 데이터베이스/캐시와 같이 동시 초기화가 가능한 인프라 컴포넌트들

병렬 실행을 비활성화하려면 `--no-parallel` 옵션을 사용합니다.

## 로그 및 보고서

### 로그 파일
- `logs/batch_execution_YYYYMMDD_HHMMSS.log` - 마스터 배치 실행 로그
- `logs/UoW-XXX_YYYYMMDD_HHMMSS.log` - 개별 UoW 실행 로그
- `logs/UoW-XXX_test_YYYYMMDD_HHMMSS.log` - 개별 UoW 테스트 로그
- `logs/UoW-XXX_build_YYYYMMDD_HHMMSS.log` - 개별 UoW 빌드 로그

### 보고서 파일
- `reports/batch_execution_report_YYYYMMDD_HHMMSS.md` - 배치 실행 종합 보고서
- `reports/UoW-XXX_YYYYMMDD_HHMMSS.md` - 개별 UoW 실행 보고서

## 에러 처리 및 재시도

### 자동 재시도
- 각 UoW는 최대 2회 재시도 (기본값)
- 재시도 간격: 30초 (개별 UoW), 60초 (배치)
- `--retry=N` 옵션으로 재시도 횟수 조정 가능

### 실패 시 복구
```bash
# 실패한 UoW부터 재시작
./scripts/batch-execute-uows.sh --start-from=UoW-140

# 개별 UoW 재실행
./scripts/execute-uow.sh UoW-140

# 실패해도 계속 진행하여 전체 상황 파악
./scripts/batch-execute-uows.sh --continue-on-failure
```

## 고급 사용법

### 개발 중 부분 실행
```bash
# Phase 2만 실행 (인프라 구성 요소)
./scripts/batch-execute-uows.sh --phase=2

# 비즈니스 로직 부분만 실행 (Application 레이어)
./scripts/batch-execute-uows.sh --phase=3

# 테스트와 빌드 스킵하고 빠른 실행
./scripts/batch-execute-uows.sh --skip-tests --skip-build
```

### CI/CD 통합
```bash
# CI/CD 환경에서 사용 (상세 로그, 실패 시 중단)
./scripts/batch-execute-uows.sh --verbose --timeout=1800

# 배포 단계만 실행
./scripts/batch-execute-uows.sh --phase=4
```

## 프롬프트 파일 구조

각 UoW의 프롬프트 파일(`prompts/UoW-XXX.md`)은 다음 구조를 따릅니다:

```markdown
# UoW-XXX: [Name]

## Project Context
프로젝트 컨텍스트와 UoW 역할 설명

## Implementation Requirements
**Implements**: FR-XXX, NFR-XXX; UoW-XXX

### Objective
구현 목표

### Scope
구현 범위

### Acceptance Criteria
AC-1부터 AC-4까지의 수락 기준

### Technical Constraints
기술적 제약사항

### Dependencies
의존 UoW 목록

### Integration Points
다른 컴포넌트와의 통합 지점
```

## 문제 해결

### 일반적인 문제들

1. **실행 권한 오류**
   ```bash
   chmod +x scripts/*.sh
   ```

2. **UoW 의존성 오류**
   - 의존하는 UoW가 완료되었는지 확인
   - `reports/` 디렉토리에서 성공 보고서 확인

3. **타임아웃 오류**
   ```bash
   # 더 긴 타임아웃 설정
   ./scripts/batch-execute-uows.sh --timeout=7200
   ```

4. **병렬 실행 문제**
   ```bash
   # 병렬 실행 비활성화
   ./scripts/batch-execute-uows.sh --no-parallel
   ```

### 디버깅

```bash
# 상세 로그로 문제 진단
./scripts/execute-uow.sh UoW-XXX --verbose

# 드라이런으로 실행 계획 확인
./scripts/batch-execute-uows.sh --dry-run --verbose

# 로그 파일 직접 확인
tail -f logs/batch_execution_*.log
```

## 성능 최적화

- **병렬 실행**: 호환 가능한 UoW들의 동시 실행으로 시간 단축
- **스마트 재시도**: 네트워크 오류 등 일시적 문제에 대한 자동 복구
- **로그 레벨 조정**: 필요한 경우에만 `--verbose` 사용
- **선택적 실행**: `--phase` 또는 `--start-from` 옵션으로 불필요한 단계 스킵

## 지원

- **실행 순서**: `configs/uow-execution-order.yaml` 참조
- **개별 UoW 상세**: `prompts/UoW-XXX.md` 참조
- **전체 아키텍처**: 프로젝트 루트의 `docs/SSOT.md` 참조
- **개발 가이드**: 프로젝트 루트의 `CLAUDE.md` 참조

---

이 배치 시스템을 통해 {{PROJECT_NAME}} 프로젝트의 모든 UoW를 체계적이고 안정적으로 구현할 수 있습니다.

*Generated by Demeter template system*